package sample;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.text.Font;
import javafx.scene.text.Text;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;
import java.util.ArrayList;
import java.lang.NullPointerException;

public class EestiMurded extends Application {

    Sonad words = new Sonad();
    ArrayList<String> murdesonad = (ArrayList) words.sonad().get("murdesonad"); ArrayList<String> yldkeele_vasted = (ArrayList) words.sonad().get("yldkeele_vasted"); ArrayList<String> vastatud_sonad = new ArrayList<String>();ArrayList<Integer> testlist = new ArrayList<Integer>();
    Stage alglava;Stage lava;
    RadioButton nupp1 = new RadioButton();RadioButton nupp2 = new RadioButton();RadioButton nupp3 = new RadioButton();
    ToggleGroup vastused = new ToggleGroup();
    int punkt = 0;
    Label sonu = new Label("Sõnu jäänud: " + murdesonad.size());Label murdesona = new Label();Label punktid = new Label("Punkte on: " + punkt);
    Button vasta = new Button("Vasta");
    Text vajutuse_tekst = new Text();Text errori_tekst = new Text();
    int suvaline_indeks0 = juhuslik_indeks(murdesonad);int suvaline_indeks1 = juhuslik_indeks(murdesonad);int suvaline_indeks2 = juhuslik_indeks(murdesonad); int murdesona_indeks;
    String oige_vastus = new String();

    @Override
    public void start(Stage primaryStage) throws Exception {
        seadista1Aken();
        uusgame();
    }

    private void vastamine(){
        vasta.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                errori_tekst.setText("");

                try{
                    System.out.println("Vajutas!");

                    RadioButton rb = (RadioButton) vastused.getSelectedToggle();
                    String vastus = rb.getText();
                    System.out.println("Kasutaja vastas, et " + murdesona.getText() + " vaste üldkeeles on " + vastus);

                    if(vastus.equals(oige_vastus)) {
                        System.out.println("See vastus on õige. Lisan ühe punkti ja eemaldan murdesõna listist.");
                        vajutuse_tekst.setText("Õige!");
                        punkt++;
                        punktid.setText("Punkte: " + punkt);
                        murdesonad.remove(murdesona.getText());
                        sonu.setText("Sõnu jäänud: " + murdesonad.size());
                        yldkeele_vasted.remove(oige_vastus);
                        vastatud_sonad.add(vastus);
                        System.out.println("Selle tulemusel on kasutajal punke " + punkt + ", murdesõnade listi pikkus on " + murdesonad.size() + ", üldkeele listi pikkus on " + yldkeele_vasted.size() + " ja vastatud sõnade listi pikkus on " + vastatud_sonad.size());
                    } else {
                        System.out.println("See vastus on vale. Eemaldan ühe punkti, aga listid jäävad samaks.");
                        vajutuse_tekst.setText("Vale!");
                        punkt--;
                        punktid.setText("Punkte:" + punkt);
                        System.out.println("Selle tulemusel on kasutajal punkte " + punkt + ", murdesõnade listi pikkus on endiselt " + murdesonad.size() + ", üldkeele listi pikkus on endiselt " + yldkeele_vasted.size() + " ja vastatud sõnade listi pikkus on endiselt " + vastatud_sonad.size());
                    }

                    System.out.println("Määran kasutajale kuvamiseks uued sõnad.");
                    suvaline_indeks0 = juhuslik_indeks(murdesonad);
                    System.out.println("Murdesõnade listi pikkus on " + murdesonad.size() + " ja suvaline_indeks0 = " + suvaline_indeks0);

                    if(murdesonad.size() >= 3) {
                        suvaline_indeks1 = juhuslik_indeks(murdesonad);
                        while (suvaline_indeks0 == suvaline_indeks1) suvaline_indeks1 = juhuslik_indeks(murdesonad);
                        suvaline_indeks2 = juhuslik_indeks(murdesonad);
                        System.out.println("Indeksid: " + suvaline_indeks0 + " " + suvaline_indeks1 + " " + suvaline_indeks2);

                        System.out.println("Murdesõnade listi pikkus on " + murdesonad.size() + ", üldkeele listi pikkus on " + yldkeele_vasted.size() + " ja vastatud sõnade listi pikkus on " + vastatud_sonad.size());

                        System.out.println("Kasutan funktsiooni muuda ()");
                        muuda(false, yldkeele_vasted, yldkeele_vasted);
                        System.out.println("3 indeksit testlistis on: " + testlist + ", nendele vastavad üldkeele listis sõnad " + yldkeele_vasted.get(testlist.get(0)) + ", " + yldkeele_vasted.get(testlist.get(1)) + " ja " + yldkeele_vasted.get(testlist.get(2)));

                        murdesona_indeks = testlist.indexOf(murdesonad.indexOf(murdesona.getText()));
                        oige_vastus = yldkeele_vasted.get(testlist.get(murdesona_indeks));

                        System.out.println("Nupp1 all on " + nupp1.getText() + ", nupp2 all on " + nupp2.getText() + " ja nupp3 all on " + nupp3.getText());
                        System.out.println("Küsitakse murdesõna " + murdesona.getText() + ", selle indeks murdesõnade listis on " + murdesonad.indexOf(murdesona.getText()) + " ja see indeks on indeksite listis " + murdesona_indeks + ". element");
                        System.out.println("Õige vastus on seega " + oige_vastus + ", sest " + oige_vastus + " on üldkeele listi " + murdesonad.indexOf(murdesona.getText()) + ". element ehk " + yldkeele_vasted.get(murdesonad.indexOf(murdesona.getText())));
                        rb.setSelected(false);
                    }

                    else if(!murdesonad.isEmpty()) {
                        suvaline_indeks1 = juhuslik_indeks(murdesonad);
                        while (suvaline_indeks0 == suvaline_indeks1) suvaline_indeks1 = juhuslik_indeks(murdesonad);
                        suvaline_indeks2 = juhuslik_indeks(murdesonad);
                        System.out.println("Murdesõnade listi pikkus on 0 < list < 3 ehk 1 või 2. suvaline_indeks0 küsitakse murdesõnade listi pikkuse järgi ja see on " + suvaline_indeks0 + ". Murdesõnade listi pikkus peaks olema sama, mis üldkeele vastete listi pikkus, milleks on " + yldkeele_vasted.size() + ". Teised indeksid küsitakse nüüd vastatud sõnade listist, mille pikkus on " + vastatud_sonad.size() + ". suvaline_indeks1 = " + suvaline_indeks1 + " ja suvaline_indeks2 = " + suvaline_indeks2);

                        System.out.println("Kasutan funktsiooni muuda ()");
                        muuda(true, yldkeele_vasted, vastatud_sonad);

                        System.out.println("Nüüd on testlistis 2 indeksit: " + testlist + ", nendele vastavad vastatud sõnade listis sõnad " + vastatud_sonad.get(testlist.get(0)) + " ja " + vastatud_sonad.get(testlist.get(1)));

                        murdesona_indeks = murdesonad.indexOf(murdesona.getText());
                        oige_vastus = yldkeele_vasted.get(murdesona_indeks);

                        System.out.println("Murdesõnade listi pikkus on " + murdesonad.size() + ", üldkeele listi pikkus on " + yldkeele_vasted.size() + " ja vastatud sõnade listi pikkus on " + vastatud_sonad.size());
                        System.out.println("Nupp1 all on " + nupp1.getText() + ", nupp2 all on " + nupp2.getText() + " ja nupp3 all on " + nupp3.getText());
                        System.out.println("Küsitakse murdesõna " + murdesona.getText() + ", selle indeks murdesõnade listis on " + murdesonad.indexOf(murdesona.getText()) + " ja see indeks on indeksite listis " + murdesona_indeks + ". element");
                        System.out.println("Õige vastus on seega " + oige_vastus + ", sest " + oige_vastus + " on üldkeele listi " + murdesonad.indexOf(murdesona.getText()) + ". element ehk " + yldkeele_vasted.get(murdesonad.indexOf(murdesona.getText())));
                        rb.setSelected(false);
                    }

                    else lopetaGame();

                } catch (NullPointerException e){

                }
            }
        });
    }

    private void lopetaGame(){

        lava.close(); // pane mängu aken kinni

        StackPane loppasetus = new StackPane();
        lava = new Stage();
        Scene loppstseen = new Scene(loppasetus, 650, 500);
        lava.setScene(loppstseen);
        Label lopp = new Label("Mäng läbi! Kogusid " + punkt + " punkti."); // kuva kasutajale, et mäng on läbi ja tema kogutud punktide arv
        loppasetus.getChildren().add(lopp);
        lava.show();
    }

    private void uusgame(){
        while (suvaline_indeks0 == suvaline_indeks1) suvaline_indeks1 = juhuslik_indeks(yldkeele_vasted);while(suvaline_indeks0 == suvaline_indeks2 || suvaline_indeks1 == suvaline_indeks2)suvaline_indeks2 = juhuslik_indeks(yldkeele_vasted);

        System.out.println("Uusgame läks käima! Esiteks prindin muuda()-funktsiooni teated");

        muuda(false, yldkeele_vasted, yldkeele_vasted);

        murdesona_indeks = testlist.indexOf(murdesonad.indexOf(murdesona.getText()));
        oige_vastus = yldkeele_vasted.get(testlist.get(murdesona_indeks));

        System.out.println("Murdesõnade listi pikkus on " + murdesonad.size() + ", üldkeele listi pikkus on " + yldkeele_vasted.size() + " ja vastatud sõnade listi pikkus on " + vastatud_sonad.size());
        System.out.println("3 indeksit testlistis on: " + testlist + ", nendele vastavad üldkeele listis sõnad " + yldkeele_vasted.get(testlist.get(0)) + ", " + yldkeele_vasted.get(testlist.get(1)) + " ja " + yldkeele_vasted.get(testlist.get(2)));
        System.out.println("Nupp1 all on " + nupp1.getText() + ", nupp2 all on " + nupp2.getText() + " ja nupp3 all on " + nupp3.getText());
        System.out.println("Küsitakse murdesõna " + murdesona.getText() + ", selle indeks murdesõnade listis on " + murdesonad.indexOf(murdesona.getText()) + " ja see indeks on indeksite listis " + murdesona_indeks + ". element");
        System.out.println("Õige vastus on seega " + oige_vastus + ", sest " + oige_vastus + " on üldkeele listi " + murdesonad.indexOf(murdesona.getText()) + ". element ehk " + yldkeele_vasted.get(murdesonad.indexOf(murdesona.getText())));

        vastamine();
    }

    private void muuda(boolean kasvahemkui3, ArrayList<String> oigevastuselist, ArrayList<String> teistevastustelist){

        testlist.clear();
        if(!kasvahemkui3)testlist.add(suvaline_indeks0);
        testlist.add(suvaline_indeks1); testlist.add(suvaline_indeks2);
        if(kasvahemkui3) nupp1.setText(oigevastuselist.get(suvaline_indeks0));
        else nupp1.setText(oigevastuselist.get(testlist.get(juhuslik_indeks(testlist))));
        nupp2.setText(teistevastustelist.get(testlist.get(juhuslik_indeks(testlist))));
        while(nupp1.getText().equals(nupp2.getText())) nupp2.setText(teistevastustelist.get(testlist.get(juhuslik_indeks(testlist))));
        nupp3.setText(teistevastustelist.get(testlist.get(juhuslik_indeks(testlist))));
        while(nupp1.getText().equals(nupp3.getText()) || nupp2.getText().equals(nupp3.getText())) nupp3.setText(teistevastustelist.get(testlist.get(juhuslik_indeks(testlist))));

        if(kasvahemkui3)murdesona.setText(murdesonad.get(suvaline_indeks0));
        else murdesona.setText(murdesonad.get(testlist.get(juhuslik_indeks(testlist))));

    }

    private int juhuslik_indeks(ArrayList list){
        return (int)(Math.round(Math.random() * (list.size() - 1)));
    }

    private void seadista2Aken(){
        alglava.close(); // pane alguskuva aken kinni
        StackPane asetus = new StackPane();
        lava = new Stage();
        Scene stseen = new Scene(asetus, 650, 500);
        VBox vbox = new VBox(10);
        lava.setScene(stseen);
        lava.setTitle("Eesti murdesõnade arvamise mäng");
        lava.setResizable(true);
        lava.show();
        nupp1.setToggleGroup(vastused);
        nupp2.setToggleGroup(vastused);
        nupp3.setToggleGroup(vastused);
        vbox.setAlignment(Pos.CENTER); // paiguta vbox akna keskele
        vbox.getChildren().addAll(sonu, murdesona, nupp1, nupp2, nupp3, vasta, vajutuse_tekst, errori_tekst, punktid); // määra vboxi elemendid
        asetus.getChildren().addAll(vbox); // pane vbox akna sisse
    }

    private void seadista1Aken(){
        StackPane algasetus = new StackPane();
        alglava = new Stage();
        Scene algstseen = new Scene(algasetus, 650, 500);
        VBox algvbox = new VBox(20);
        alglava.setScene(algstseen);
        alglava.setTitle("Eesti murdesõnade arvamise mäng");
        alglava.setResizable(true);
        alglava.show();
        Text tervitustekst = new Text("See mäng laseb sul arvata erinevate murdesõnade tähendust. \n Kui oled õigesti arvanud, saad punkti. Kui arvad valesti, läheb punkt maha. \n Alustamiseks vajuta nupule 'Alusta'.");
        tervitustekst.setTextAlignment(TextAlignment.CENTER);
        tervitustekst.setFont(Font.font(15));
        Button nupp = new Button("Alusta");
        nupp.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                seadista2Aken();
            } // käivita mäng
        });
        algstseen.getStylesheets().add
                (EestiMurded.class.getResource("Main.css").toExternalForm());
        algvbox.setAlignment(Pos.CENTER);
        algvbox.getChildren().addAll(tervitustekst, nupp);
        algasetus.getChildren().addAll(algvbox);
    }
}